#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="zwg_iworld")]
	public partial class MainDatadbmlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertzwg_Author(zwg_Author instance);
    partial void Updatezwg_Author(zwg_Author instance);
    partial void Deletezwg_Author(zwg_Author instance);
    partial void Insertzwg_Relative(zwg_Relative instance);
    partial void Updatezwg_Relative(zwg_Relative instance);
    partial void Deletezwg_Relative(zwg_Relative instance);
    #endregion
		
		public MainDatadbmlDataContext() : 
				base(global::Client.Model.Properties.Settings.Default.zwg_iworldConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<zwg_Author> zwg_Author
		{
			get
			{
				return this.GetTable<zwg_Author>();
			}
		}
		
		public System.Data.Linq.Table<zwg_Relative> zwg_Relative
		{
			get
			{
				return this.GetTable<zwg_Relative>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[zwg-Author]")]
	public partial class zwg_Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _FundsCode;
		
		private string _SafeCode;
		
		private int _Status;
		
		private System.DateTime _LastLoginTime;
		
		private string _LastLoginIp;
		
		private string _LastLoginAddress;
		
		private int _Subordinate;
		
		private double _Money;
		
		private double _Money_Frozen;
		
		private double _Consumption;
		
		private int _Integral;
		
		private int _Layer;
		
		private System.DateTime _CreatedTime;
		
		private System.DateTime _ModifiedTime;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private System.Nullable<int> _BindingId;
		
		private System.Nullable<int> _PlayInfoId;
		
		private EntitySet<zwg_Relative> _zwg_Relative;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFundsCodeChanging(string value);
    partial void OnFundsCodeChanged();
    partial void OnSafeCodeChanging(string value);
    partial void OnSafeCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnLastLoginTimeChanging(System.DateTime value);
    partial void OnLastLoginTimeChanged();
    partial void OnLastLoginIpChanging(string value);
    partial void OnLastLoginIpChanged();
    partial void OnLastLoginAddressChanging(string value);
    partial void OnLastLoginAddressChanged();
    partial void OnSubordinateChanging(int value);
    partial void OnSubordinateChanged();
    partial void OnMoneyChanging(double value);
    partial void OnMoneyChanged();
    partial void OnMoney_FrozenChanging(double value);
    partial void OnMoney_FrozenChanged();
    partial void OnConsumptionChanging(double value);
    partial void OnConsumptionChanged();
    partial void OnIntegralChanging(int value);
    partial void OnIntegralChanged();
    partial void OnLayerChanging(int value);
    partial void OnLayerChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    partial void OnBindingIdChanging(System.Nullable<int> value);
    partial void OnBindingIdChanged();
    partial void OnPlayInfoIdChanging(System.Nullable<int> value);
    partial void OnPlayInfoIdChanged();
    #endregion
		
		public zwg_Author()
		{
			this._zwg_Relative = new EntitySet<zwg_Relative>(new Action<zwg_Relative>(this.attach_zwg_Relative), new Action<zwg_Relative>(this.detach_zwg_Relative));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundsCode", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FundsCode
		{
			get
			{
				return this._FundsCode;
			}
			set
			{
				if ((this._FundsCode != value))
				{
					this.OnFundsCodeChanging(value);
					this.SendPropertyChanging();
					this._FundsCode = value;
					this.SendPropertyChanged("FundsCode");
					this.OnFundsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeCode", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SafeCode
		{
			get
			{
				return this._SafeCode;
			}
			set
			{
				if ((this._SafeCode != value))
				{
					this.OnSafeCodeChanging(value);
					this.SendPropertyChanging();
					this._SafeCode = value;
					this.SendPropertyChanged("SafeCode");
					this.OnSafeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIp", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LastLoginIp
		{
			get
			{
				return this._LastLoginIp;
			}
			set
			{
				if ((this._LastLoginIp != value))
				{
					this.OnLastLoginIpChanging(value);
					this.SendPropertyChanging();
					this._LastLoginIp = value;
					this.SendPropertyChanged("LastLoginIp");
					this.OnLastLoginIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginAddress", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LastLoginAddress
		{
			get
			{
				return this._LastLoginAddress;
			}
			set
			{
				if ((this._LastLoginAddress != value))
				{
					this.OnLastLoginAddressChanging(value);
					this.SendPropertyChanging();
					this._LastLoginAddress = value;
					this.SendPropertyChanged("LastLoginAddress");
					this.OnLastLoginAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subordinate", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Subordinate
		{
			get
			{
				return this._Subordinate;
			}
			set
			{
				if ((this._Subordinate != value))
				{
					this.OnSubordinateChanging(value);
					this.SendPropertyChanging();
					this._Subordinate = value;
					this.SendPropertyChanged("Subordinate");
					this.OnSubordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money_Frozen", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double Money_Frozen
		{
			get
			{
				return this._Money_Frozen;
			}
			set
			{
				if ((this._Money_Frozen != value))
				{
					this.OnMoney_FrozenChanging(value);
					this.SendPropertyChanging();
					this._Money_Frozen = value;
					this.SendPropertyChanged("Money_Frozen");
					this.OnMoney_FrozenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consumption", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double Consumption
		{
			get
			{
				return this._Consumption;
			}
			set
			{
				if ((this._Consumption != value))
				{
					this.OnConsumptionChanging(value);
					this.SendPropertyChanging();
					this._Consumption = value;
					this.SendPropertyChanged("Consumption");
					this.OnConsumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Integral", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Integral
		{
			get
			{
				return this._Integral;
			}
			set
			{
				if ((this._Integral != value))
				{
					this.OnIntegralChanging(value);
					this.SendPropertyChanging();
					this._Integral = value;
					this.SendPropertyChanged("Integral");
					this.OnIntegralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Layer
		{
			get
			{
				return this._Layer;
			}
			set
			{
				if ((this._Layer != value))
				{
					this.OnLayerChanging(value);
					this.SendPropertyChanging();
					this._Layer = value;
					this.SendPropertyChanged("Layer");
					this.OnLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BindingId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BindingId
		{
			get
			{
				return this._BindingId;
			}
			set
			{
				if ((this._BindingId != value))
				{
					this.OnBindingIdChanging(value);
					this.SendPropertyChanging();
					this._BindingId = value;
					this.SendPropertyChanged("BindingId");
					this.OnBindingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayInfoId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PlayInfoId
		{
			get
			{
				return this._PlayInfoId;
			}
			set
			{
				if ((this._PlayInfoId != value))
				{
					this.OnPlayInfoIdChanging(value);
					this.SendPropertyChanging();
					this._PlayInfoId = value;
					this.SendPropertyChanged("PlayInfoId");
					this.OnPlayInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zwg_Author_zwg_Relative", Storage="_zwg_Relative", ThisKey="Id", OtherKey="Author_Id")]
		public EntitySet<zwg_Relative> zwg_Relative
		{
			get
			{
				return this._zwg_Relative;
			}
			set
			{
				this._zwg_Relative.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zwg_Relative(zwg_Relative entity)
		{
			this.SendPropertyChanging();
			entity.zwg_Author = this;
		}
		
		private void detach_zwg_Relative(zwg_Relative entity)
		{
			this.SendPropertyChanging();
			entity.zwg_Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[zwg-Relative]")]
	public partial class zwg_Relative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _NodeId;
		
		private int _NodeLayer;
		
		private System.Nullable<int> _Author_Id;
		
		private EntityRef<zwg_Author> _zwg_Author;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    partial void OnNodeLayerChanging(int value);
    partial void OnNodeLayerChanged();
    partial void OnAuthor_IdChanging(System.Nullable<int> value);
    partial void OnAuthor_IdChanged();
    #endregion
		
		public zwg_Relative()
		{
			this._zwg_Author = default(EntityRef<zwg_Author>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL")]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeLayer", DbType="Int NOT NULL")]
		public int NodeLayer
		{
			get
			{
				return this._NodeLayer;
			}
			set
			{
				if ((this._NodeLayer != value))
				{
					this.OnNodeLayerChanging(value);
					this.SendPropertyChanging();
					this._NodeLayer = value;
					this.SendPropertyChanged("NodeLayer");
					this.OnNodeLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author_Id", DbType="Int")]
		public System.Nullable<int> Author_Id
		{
			get
			{
				return this._Author_Id;
			}
			set
			{
				if ((this._Author_Id != value))
				{
					if (this._zwg_Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthor_IdChanging(value);
					this.SendPropertyChanging();
					this._Author_Id = value;
					this.SendPropertyChanged("Author_Id");
					this.OnAuthor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zwg_Author_zwg_Relative", Storage="_zwg_Author", ThisKey="Author_Id", OtherKey="Id", IsForeignKey=true)]
		public zwg_Author zwg_Author
		{
			get
			{
				return this._zwg_Author.Entity;
			}
			set
			{
				zwg_Author previousValue = this._zwg_Author.Entity;
				if (((previousValue != value) 
							|| (this._zwg_Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zwg_Author.Entity = null;
						previousValue.zwg_Relative.Remove(this);
					}
					this._zwg_Author.Entity = value;
					if ((value != null))
					{
						value.zwg_Relative.Add(this);
						this._Author_Id = value.Id;
					}
					else
					{
						this._Author_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("zwg_Author");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
