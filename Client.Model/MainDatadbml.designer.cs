#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34003
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IWorld")]
	public partial class MainDatadbmlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertIWorld_Author(IWorld_Author instance);
    partial void UpdateIWorld_Author(IWorld_Author instance);
    partial void DeleteIWorld_Author(IWorld_Author instance);
    partial void InsertIWorld_Administrator(IWorld_Administrator instance);
    partial void UpdateIWorld_Administrator(IWorld_Administrator instance);
    partial void DeleteIWorld_Administrator(IWorld_Administrator instance);
    #endregion
		
		public MainDatadbmlDataContext() : 
				base(global::Client.Model.Properties.Settings.Default.IWorldConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDatadbmlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IWorld_Author> IWorld_Author
		{
			get
			{
				return this.GetTable<IWorld_Author>();
			}
		}
		
		public System.Data.Linq.Table<IWorld_Administrator> IWorld_Administrator
		{
			get
			{
				return this.GetTable<IWorld_Administrator>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IWorld_Author")]
	public partial class IWorld_Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _SafeCode;
		
		private string _Email;
		
		private bool _BindingEmail;
		
		private bool _IsAgents;
		
		private double _NormalReturnPoints;
		
		private double _UncertainReturnPoints;
		
		private double _Money;
		
		private double _MoneyBeFrozen;
		
		private double _Consumption;
		
		private double _Integral;
		
		private string _Holder;
		
		private string _Card;
		
		private int _Bank;
		
		private bool _BindingCard;
		
		private int _Status;
		
		private int _MaxOfSubordinate;
		
		private int _Subordinate;
		
		private System.DateTime _LastLoginTime;
		
		private string _LastLoginIp;
		
		private int _LeftKey;
		
		private int _RightKey;
		
		private int _Layer;
		
		private string _Tree;
		
		private System.DateTime _CreatedTime;
		
		private System.DateTime _ModifiedTime;
		
		private int _GroupId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSafeCodeChanging(string value);
    partial void OnSafeCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBindingEmailChanging(bool value);
    partial void OnBindingEmailChanged();
    partial void OnIsAgentsChanging(bool value);
    partial void OnIsAgentsChanged();
    partial void OnNormalReturnPointsChanging(double value);
    partial void OnNormalReturnPointsChanged();
    partial void OnUncertainReturnPointsChanging(double value);
    partial void OnUncertainReturnPointsChanged();
    partial void OnMoneyChanging(double value);
    partial void OnMoneyChanged();
    partial void OnMoneyBeFrozenChanging(double value);
    partial void OnMoneyBeFrozenChanged();
    partial void OnConsumptionChanging(double value);
    partial void OnConsumptionChanged();
    partial void OnIntegralChanging(double value);
    partial void OnIntegralChanged();
    partial void OnHolderChanging(string value);
    partial void OnHolderChanged();
    partial void OnCardChanging(string value);
    partial void OnCardChanged();
    partial void OnBankChanging(int value);
    partial void OnBankChanged();
    partial void OnBindingCardChanging(bool value);
    partial void OnBindingCardChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMaxOfSubordinateChanging(int value);
    partial void OnMaxOfSubordinateChanged();
    partial void OnSubordinateChanging(int value);
    partial void OnSubordinateChanged();
    partial void OnLastLoginTimeChanging(System.DateTime value);
    partial void OnLastLoginTimeChanged();
    partial void OnLastLoginIpChanging(string value);
    partial void OnLastLoginIpChanged();
    partial void OnLeftKeyChanging(int value);
    partial void OnLeftKeyChanged();
    partial void OnRightKeyChanging(int value);
    partial void OnRightKeyChanged();
    partial void OnLayerChanging(int value);
    partial void OnLayerChanged();
    partial void OnTreeChanging(string value);
    partial void OnTreeChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    #endregion
		
		public IWorld_Author()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeCode", DbType="NVarChar(MAX)")]
		public string SafeCode
		{
			get
			{
				return this._SafeCode;
			}
			set
			{
				if ((this._SafeCode != value))
				{
					this.OnSafeCodeChanging(value);
					this.SendPropertyChanging();
					this._SafeCode = value;
					this.SendPropertyChanged("SafeCode");
					this.OnSafeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BindingEmail", DbType="Bit NOT NULL")]
		public bool BindingEmail
		{
			get
			{
				return this._BindingEmail;
			}
			set
			{
				if ((this._BindingEmail != value))
				{
					this.OnBindingEmailChanging(value);
					this.SendPropertyChanging();
					this._BindingEmail = value;
					this.SendPropertyChanged("BindingEmail");
					this.OnBindingEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgents", DbType="Bit NOT NULL")]
		public bool IsAgents
		{
			get
			{
				return this._IsAgents;
			}
			set
			{
				if ((this._IsAgents != value))
				{
					this.OnIsAgentsChanging(value);
					this.SendPropertyChanging();
					this._IsAgents = value;
					this.SendPropertyChanged("IsAgents");
					this.OnIsAgentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalReturnPoints", DbType="Float NOT NULL")]
		public double NormalReturnPoints
		{
			get
			{
				return this._NormalReturnPoints;
			}
			set
			{
				if ((this._NormalReturnPoints != value))
				{
					this.OnNormalReturnPointsChanging(value);
					this.SendPropertyChanging();
					this._NormalReturnPoints = value;
					this.SendPropertyChanged("NormalReturnPoints");
					this.OnNormalReturnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UncertainReturnPoints", DbType="Float NOT NULL")]
		public double UncertainReturnPoints
		{
			get
			{
				return this._UncertainReturnPoints;
			}
			set
			{
				if ((this._UncertainReturnPoints != value))
				{
					this.OnUncertainReturnPointsChanging(value);
					this.SendPropertyChanging();
					this._UncertainReturnPoints = value;
					this.SendPropertyChanged("UncertainReturnPoints");
					this.OnUncertainReturnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float NOT NULL")]
		public double Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyBeFrozen", DbType="Float NOT NULL")]
		public double MoneyBeFrozen
		{
			get
			{
				return this._MoneyBeFrozen;
			}
			set
			{
				if ((this._MoneyBeFrozen != value))
				{
					this.OnMoneyBeFrozenChanging(value);
					this.SendPropertyChanging();
					this._MoneyBeFrozen = value;
					this.SendPropertyChanged("MoneyBeFrozen");
					this.OnMoneyBeFrozenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consumption", DbType="Float NOT NULL")]
		public double Consumption
		{
			get
			{
				return this._Consumption;
			}
			set
			{
				if ((this._Consumption != value))
				{
					this.OnConsumptionChanging(value);
					this.SendPropertyChanging();
					this._Consumption = value;
					this.SendPropertyChanged("Consumption");
					this.OnConsumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Integral", DbType="Float NOT NULL")]
		public double Integral
		{
			get
			{
				return this._Integral;
			}
			set
			{
				if ((this._Integral != value))
				{
					this.OnIntegralChanging(value);
					this.SendPropertyChanging();
					this._Integral = value;
					this.SendPropertyChanged("Integral");
					this.OnIntegralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Holder", DbType="NVarChar(MAX)")]
		public string Holder
		{
			get
			{
				return this._Holder;
			}
			set
			{
				if ((this._Holder != value))
				{
					this.OnHolderChanging(value);
					this.SendPropertyChanging();
					this._Holder = value;
					this.SendPropertyChanged("Holder");
					this.OnHolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="NVarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this.OnCardChanging(value);
					this.SendPropertyChanging();
					this._Card = value;
					this.SendPropertyChanged("Card");
					this.OnCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="Int NOT NULL")]
		public int Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BindingCard", DbType="Bit NOT NULL")]
		public bool BindingCard
		{
			get
			{
				return this._BindingCard;
			}
			set
			{
				if ((this._BindingCard != value))
				{
					this.OnBindingCardChanging(value);
					this.SendPropertyChanging();
					this._BindingCard = value;
					this.SendPropertyChanged("BindingCard");
					this.OnBindingCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOfSubordinate", DbType="Int NOT NULL")]
		public int MaxOfSubordinate
		{
			get
			{
				return this._MaxOfSubordinate;
			}
			set
			{
				if ((this._MaxOfSubordinate != value))
				{
					this.OnMaxOfSubordinateChanging(value);
					this.SendPropertyChanging();
					this._MaxOfSubordinate = value;
					this.SendPropertyChanged("MaxOfSubordinate");
					this.OnMaxOfSubordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subordinate", DbType="Int NOT NULL")]
		public int Subordinate
		{
			get
			{
				return this._Subordinate;
			}
			set
			{
				if ((this._Subordinate != value))
				{
					this.OnSubordinateChanging(value);
					this.SendPropertyChanging();
					this._Subordinate = value;
					this.SendPropertyChanged("Subordinate");
					this.OnSubordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIp", DbType="NVarChar(MAX)")]
		public string LastLoginIp
		{
			get
			{
				return this._LastLoginIp;
			}
			set
			{
				if ((this._LastLoginIp != value))
				{
					this.OnLastLoginIpChanging(value);
					this.SendPropertyChanging();
					this._LastLoginIp = value;
					this.SendPropertyChanged("LastLoginIp");
					this.OnLastLoginIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftKey", DbType="Int NOT NULL")]
		public int LeftKey
		{
			get
			{
				return this._LeftKey;
			}
			set
			{
				if ((this._LeftKey != value))
				{
					this.OnLeftKeyChanging(value);
					this.SendPropertyChanging();
					this._LeftKey = value;
					this.SendPropertyChanged("LeftKey");
					this.OnLeftKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightKey", DbType="Int NOT NULL")]
		public int RightKey
		{
			get
			{
				return this._RightKey;
			}
			set
			{
				if ((this._RightKey != value))
				{
					this.OnRightKeyChanging(value);
					this.SendPropertyChanging();
					this._RightKey = value;
					this.SendPropertyChanged("RightKey");
					this.OnRightKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer", DbType="Int NOT NULL")]
		public int Layer
		{
			get
			{
				return this._Layer;
			}
			set
			{
				if ((this._Layer != value))
				{
					this.OnLayerChanging(value);
					this.SendPropertyChanging();
					this._Layer = value;
					this.SendPropertyChanged("Layer");
					this.OnLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tree", DbType="NVarChar(MAX)")]
		public string Tree
		{
			get
			{
				return this._Tree;
			}
			set
			{
				if ((this._Tree != value))
				{
					this.OnTreeChanging(value);
					this.SendPropertyChanging();
					this._Tree = value;
					this.SendPropertyChanged("Tree");
					this.OnTreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IWorld_Administrator")]
	public partial class IWorld_Administrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private System.DateTime _LastLoginTime;
		
		private string _LastLoginIp;
		
		private System.DateTime _CreatedTime;
		
		private System.DateTime _ModifiedTime;
		
		private int _GroupId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastLoginTimeChanging(System.DateTime value);
    partial void OnLastLoginTimeChanged();
    partial void OnLastLoginIpChanging(string value);
    partial void OnLastLoginIpChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    #endregion
		
		public IWorld_Administrator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIp", DbType="NVarChar(MAX)")]
		public string LastLoginIp
		{
			get
			{
				return this._LastLoginIp;
			}
			set
			{
				if ((this._LastLoginIp != value))
				{
					this.OnLastLoginIpChanging(value);
					this.SendPropertyChanging();
					this._LastLoginIp = value;
					this.SendPropertyChanged("LastLoginIp");
					this.OnLastLoginIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
